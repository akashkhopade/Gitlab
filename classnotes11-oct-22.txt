Good Morning:)

How OS acts as interface ?
DMA
CPU Instructions
IR
Accumulator
____________________________
Kernel = OS

Bootstrapping  =   start the system and the OS
	load the kernel in the RAM and activate it

Steps  on POWER ON---
1. POST = Power ON SELF TEST - automatic activity to check which devices are connected to the system

2. BIOS takes control = Basic Input Output System
	-on a ROM the BIOS is present
	- in the BIOS settings we find the location from where the kernel boot program should be loaded 
		some common locations are 
			1. Boot sector of HDD - sector 0 on HDD
			2. EEPROM = Electonically Erasabale and Programmable ROM 
			3. We can specify a Bootable CD / PD
			
	- the BootLoader  called as GRUBLOADER or LILOADER
	will automatically copy the boot program from any one of the above location into the RAM 
	
_______________________________________________
Interrupt  - disturbance or signal 

Interrupt will generated by 
	1. IO devices = IO interrupt
	2. Timer = Timer interrupt
	3. program actions may generate interrupt - software interrupts

Interrupts are received by CPU pins
Interrupt Handlers are called as IH or ISR interrupt service routine 

Mapping between interrupt and ISR is a table 
	IVT = interrupt vector table
		interrupt num |  pointer to ISR

Maskable Interrupts = interrupts that can be ignored or masked

Non Maskable Interrupts = interrupts that can NEVER be ignored or masked

Find examples of Maskable and non maskable interrupts!!!

__________________________________________
 Kernel mode = all kernel programs run in this mode - they have privilaged access or they can access privilaged instructions
 
 User mode = all user programs run in this mode - they have restricted access - cannot access privilaged instructions . can access only non privilaged instructions.
 __________________________________________
 Kernel space and User space
 ____________________________________________
 Process Management ---
 
 what is a program ? code that is present on hard disk
					 passive entity
					 
 What is a process ? process is a running program
					 present on RAM 
					 it has code + data 
					 Active entity
 
 As process is Active  process has a Life Cycle !!!
 Process Life Cycle ----
	states/phases of process life cycle =
		created state
		ready state
		running state
		Blocked state/IO wait state
		Terminated state
 
created state - 
		1. load the process from HDD to RAM
				this is called as process space
				OR process address space
		It has 4 parts in c process = code,data,stack,heap
		
		2. PCB = Process control block = it has metadata of the process that includes
			1. pid
			2. memory location
			3. priority
			4. context information
			5. statistical data like cpu usage, memory usage, time etc

Ready State = process waits for CPU in ready queue maintained by kernel


Running state = process gets the chance to use the CPU 
				CPU instructions are executed 
				
Blocked/IO wait state = as the process encounters IO instruction the process leaves the CPU , starts using DMA and waits for data transfer to complete.

Terminate State = process completes code execution
				   process space is released
				   PCB is released
__________________________________________
Linux Distribution = Linux DISTRO = Centos

Cont... file handling commands of BASH!!! 
topmost folder  = / 

Keep PWD as ~ !!!
0. remove the folder planets created yesterday 
1. create a folder structure planets --earth --moon
	  mkdir planets 
	  mkdir ./planets/earth
	  mkdir ./planets/earth/moon
	  
	  see the content of earth 
		ls ./planets/earth

2. use rmdir to remove empty directory
	 use rm -r to remove non empty directory
	  
	  command =  rm
	  option  = -r 

3. create a file in ~ folder named as poem 
		touch poem
4. use option -l to see details of folder content
		ls -l
	observe that a 0kb file poem is created on touch

5. add content to the file - using vi editor
		editor = allows us to edit filt
		Command Line editor =  vi editor
		
		default mode = command mode 
			:q = return to prompt , quit 
			:w = save
			:wq = save and quit
			:q! = quit without saving
			1yy = to copy one line
			p = paste
			1dd = to delete 1 line
			
		to write we need  = insert mode
		press i to go in insert mode
			TYPE whatever u want
		press esc to switch to command mode
		
	to write to a new line in insert mode press o

6. to see the contents of the file 
			cat  filename
			tac filename
			
7. after adding content check the file size using 
		ls -l poem
		
8. delete the file 
		rm poem  } interactive removal
		Or
		rm -f poem  } forceful removal 
9. man = manual
10 . cp = copy a file from source to destination
		using vi create a file data in ~
		create a folder osdata in ~
		copy the file data to osdata
		    cp ./data  ./osdata
		check using ls
		remove the file in osdata
		check using ls

11. move the file from ~ to osdata
		 mv ./data ./osdata
		 check using ls and ls ./osdata 
		 print the contents of data using cat 





		
		
		
		
		
		
		
		




	  
	  
	  











			
			
			
		
		
		
		



















	
	
	















